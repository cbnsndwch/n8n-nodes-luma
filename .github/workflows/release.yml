name: Release to npm

on:
  push:
    tags: 
      - 'v*.*.*'

jobs:
  publish:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version:
          - 22.x
          - 24.x

    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          package_json_file: ./package.json

      - name: Get pnpm store directory
        shell: bash
        run: echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
            
      - name: Install dependencies
        run: |
          echo "📦 Installing dependencies..."
          pnpm install --frozen-lockfile
          echo "✅ Dependencies installed successfully"
        
      - name: Run comprehensive validation
        run: |
          echo "🔍 Running pre-publish validation..."
          pnpm run prepublishOnly
          echo "✅ Pre-publish validation completed successfully"
        
      - name: Run tests
        run: |
          echo "🧪 Running test suite..."
          pnpm run test
          echo "✅ All tests passed successfully"
        
      - name: Validate package contents
        run: |
          echo "🔍 Validating package contents..."
          npm pack --dry-run
          
          PACKAGE_NAME=$(node -p "require('./package.json').name")
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          echo "📋 Package: $PACKAGE_NAME@$PACKAGE_VERSION"
          echo "✅ Package contents validated successfully"
        
      - name: Validate npm authentication
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          echo "🔐 Validating npmjs authentication..."
          if [ -z "$NODE_AUTH_TOKEN" ]; then
            echo "❌ NPM_TOKEN secret is not set"
            exit 1
          fi
          
          CURRENT_USER=$(pnpm whoami) 
          if [ -z "$CURRENT_USER" ]; then
            echo "❌ npmjs authentication failed"
            exit 1
          fi
          echo "✅ npmjs authentication successful as user: $CURRENT_USER"
        
      - name: Publish to npmjs
        run: |
          echo "🚀 Publishing package to npmjs..."
          PACKAGE_NAME=$(node -p "require('./package.json').name")
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          
          pnpm publish --access public
          echo "✅ Package $PACKAGE_NAME@$PACKAGE_VERSION published successfully"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          
      - name: Verify publication
        run: |
          echo "🔍 Verifying package publication..."
          PACKAGE_NAME=$(node -p "require('./package.json').name")
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          
          sleep 10
          npm view "$PACKAGE_NAME@$PACKAGE_VERSION" version || echo "⚠️ Package not yet available (may take a few minutes)"
          echo "✅ Release process completed"